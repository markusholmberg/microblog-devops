version: "3"

networks:
    monitor:

volumes:
    prometheus-data: {}
    grafana-data: {}

services:
    node-exporter:
        image: prom/node-exporter:v1.2.2
        container_name: node-exporter
        restart: unless-stopped
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        command:
            - '--path.procfs=/host/proc'
            - '--path.rootfs=/rootfs'
            - '--path.sysfs=/host/sys'
            - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
        ports:
            - "9100:9100"
        networks:
            - monitor

    prometheus:
        image: prom/prometheus:v2.31.1
        restart: unless-stopped
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
            - prometheus-data:/prometheus
        command:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--web.console.libraries=/etc/prometheus/console_libraries"
            - "--web.console.templates=/etc/prometheus/consoles"
            - "--storage.tsdb.retention.time=24h"
            - "--web.enable-lifecycle"
        networks:
            - monitor
        ports:
            - "9090:9090"
    
    grafana:
        image: grafana/grafana:8.2.4
        restart: unless-stopped
        volumes: 
            - grafana-data:/var/lib/grafana
        networks:
            - monitor
        ports:
            - "3000:3000"

    prod:
        #image: mahm17/microblog:latest
        build:
            context: .
            dockerfile: docker/Dockerfile_prod
        container_name: microblog
        ports:
            - "8000:5000"
        expose:
            - "8000"
        environment:
            SECRET_KEY: "my-secret-key"
            DATABASE_URL: mysql+pymysql://microblog:zxcqweasd123@db/microblog_db
        links:
            - db:database
        restart:
            "unless-stopped"

    db:
        image: mysql/mysql-server:5.7
        container_name: database
        expose:
            - "3306"
        environment:
            - MYSQL_RANDOM_ROOT_PASSWORD="yes"
            - MYSQL_DATABASE=microblog_db
            - MYSQL_USER=microblog
            - MYSQL_PASSWORD=zxcqweasd123
        restart:
            "unless-stopped"



#networks:
#    dbwebb:
#services:
#    test:
#        build:
#            context: .
#            dockerfile: docker/Dockerfile_test
#        image: test:latest
#        volumes:
#            - "./:/home/test/tests"


