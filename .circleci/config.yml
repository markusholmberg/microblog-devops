version: 2.1
orbs:
    snyk: snyk/snyk@0.0.8
executors:
   docker-publisher:
        environment:
            IMAGE_NAME: mahm17/microblog
        docker:
            - image: circleci/buildpack-deps:stretch
jobs:
    setup:
        executor: docker-publisher
        steps:
            - checkout
            - setup_remote_docker
            - run:
                name: install dependencies
                command: |
                    sudo apt-get install python3-venv
                    python3 -m venv venv
                    . venv/bin/activate
                    pip install -r requirements.txt
                    pip install -r requirements/test.txt
    build:
        executor: docker-publisher
        steps:
            - checkout
            - setup_remote_docker
            - run:
                name: Build Docker image
                command: |
                    docker build -t $IMAGE_NAME:latest -f docker/Dockerfile_prod .
            - run:
                name: Archive Docker image
                command: docker save -o image.tar $IMAGE_NAME
            - persist_to_workspace:
                root: .
                paths:
                    - ./image.tar
    test:
        executor: docker-publisher
        steps:
            - checkout
            - setup_remote_docker
            - run:
                name: Run the tests
                command: |
                    sudo apt-get install python3-venv
                    python3 -m venv venv
                    . venv/bin/activate
                    pip install -r requirements/test.txt
                    make exec-tests
                    make bandit

    publish-latest:
        executor: docker-publisher
        steps:
            - attach_workspace:
                at: /tmp/workspace
            - setup_remote_docker
            - run:
                name: Load archived Docker image
                command: docker load -i /tmp/workspace/image.tar
            - snyk/scan:
                docker-image-name: $IMAGE_NAME
            - run:
                name: Publish Docker Image to Docker Hub
                command: |
                    echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
                    docker push $IMAGE_NAME:latest
                    IMAGE_TAG="0.0.${CIRCLE_BUILD_NUM}"
                    docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
                    docker push $IMAGE_NAME:latest
                    docker push $IMAGE_NAME:$IMAGE_TAG

    ansible:
        executor: docker-publisher
        steps:
            - checkout
            - setup_remote_docker
            - run:
                name: Install ansible
                command: |
                    sudo apt-get install python3-venv
                    python3 -m venv venv
                    . venv/bin/activate
                    pip install -r requirements/deploy.txt
                    pip install ansible
            - run:
                name: Run ansible playbook
                command: |
                    . ../venv/bin/activate
                    ansible-playbook gather_aws_instances.yml appServer.yml
                working_directory: ansible

    snyk:
        docker:
            - image: circleci/python:3.5
        working_directory: ~/repo
        steps:
            - checkout
            - run:
                name: install dependencies
                command: |
                    python3 -m venv venv
                    . venv/bin/activate
                    make install
            - run: echo "source ~/repo/venv/bin/activate" >> $BASH_ENV # här gör vi så att så att CircleCi automatisk laddar venv och då kollar Snyk har installerat i den.
            - snyk/scan

workflows:
    version: 2
    build-master:
        jobs:
            - setup:
                filters:
                    branches:
                        only: master
            - build:
                requires:
                    - setup
                filters:
                    branches:
                        only: master
            - test:
                requires:
                    - build
                filters:
                    branches:
                        only: master
            - publish-latest:
                requires:
                    - test
                filters:
                    branches:
                        only: master
            - ansible:
                requires:
                    - publish-latest
                filters:
                    branches:
                        only: master
            - snyk:
                requires:
                    - ansible
                filters:
                    branches:
                        only: master
